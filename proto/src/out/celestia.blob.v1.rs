// This file is @generated by prost-build.
/// MsgPayForBlobs pays for the inclusion of a blob in the block.
#[derive(::serde::Deserialize, ::serde::Serialize)]
#[serde(default)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MsgPayForBlobs {
    #[prost(string, tag = "1")]
    pub signer: ::prost::alloc::string::String,
    /// namespaces is a list of namespaces that the blobs are associated with. A
    /// namespace is a byte slice of length 29 where the first byte is the
    /// namespaceVersion and the subsequent 28 bytes are the namespaceId.
    #[prost(bytes = "vec", repeated, tag = "2")]
    pub namespaces: ::prost::alloc::vec::Vec<::prost::alloc::vec::Vec<u8>>,
    #[prost(uint32, repeated, tag = "3")]
    pub blob_sizes: ::prost::alloc::vec::Vec<u32>,
    /// share_commitments is a list of share commitments (one per blob).
    #[prost(bytes = "vec", repeated, tag = "4")]
    pub share_commitments: ::prost::alloc::vec::Vec<::prost::alloc::vec::Vec<u8>>,
    /// share_versions are the versions of the share format that the blobs
    /// associated with this message should use when included in a block. The
    /// share_versions specified must match the share_versions used to generate the
    /// share_commitment in this message.
    #[prost(uint32, repeated, tag = "8")]
    pub share_versions: ::prost::alloc::vec::Vec<u32>,
}
/// MsgPayForBlobsResponse describes the response returned after the submission
/// of a PayForBlobs
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MsgPayForBlobsResponse {}
